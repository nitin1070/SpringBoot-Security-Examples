package in.main.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import in.main.dto.RegisterRequest;
import in.main.model.Customer;
import in.main.service.AuthService;
import jakarta.validation.Valid;

@RestController
@RequestMapping("/auth")
public class AuthController {
	@Autowired
	  private AuthService authService;
	@Autowired
	private AuthenticationManager authenticationManager;
	
	
	@PostMapping("/register")
	public ResponseEntity<String> register(@Valid @RequestBody RegisterRequest request) {
		authService.registerCustomer(request.getEmail(), request.getPassword(),request.getBalance());
		return ResponseEntity.ok("Customer registered successfully");
	}
	@PostMapping("/login")
	public ResponseEntity<?> login(@RequestBody Map<String, String> request) {
		String email = request.get("email");
		String password = request.get("password");
		authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(email, password));
		String token = authService.generateJwtToken(email);
		return ResponseEntity.ok(Map.of("token", token));
	}
	@GetMapping("/account")
	public ResponseEntity<Customer> getAccount() {
	String email =SecurityContextHolder.getContext().getAuthentication().getName();
	Customer customer = authService.getCustomerDetails(email);
	return ResponseEntity.ok(customer);
	     }
	
	
	}

